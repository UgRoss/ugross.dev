$code-font-color: #b3b9c5;
$code-color-string: #92d192;
$code-color-variable: #f2777a;
$code-color-property: #abb2bf;
$code-color-number: #fca369;
$code-color-operator: #ac8d58;
$code-color-punctuation: #d5d8df;
$code-color-comment: #777c85;
$code-color-function: #62cfcf;
$code-color-keyword: #ffeead;
$code-color-attribute: #ffd479;
$code-color-class: #e1a6f2;
$code-color-tag: #6ab0f3;
$code-color-error: #f2777a;

code[class*='language-'],
pre[class*='language-'],
pre code {
  font-family: var(--font-code);
  font-size: var(--code-font-size);
  color: $code-font-color;
  direction: ltr;
  text-align: left;
  white-space: pre;
  word-spacing: normal;
  word-break: normal;
  line-height: 1.7;
  font-weight: 400;
  margin: 1rem 0;
  tab-size: 2;
  hyphens: none;
  border-radius: var(--border-radius);
  -webkit-font-smoothing: antialiased;
}

/* Code blocks */
pre code {
  display: block;
  padding: 1.5rem;
  overflow: auto;
  background-color: #333;
  border: 0;
}

/* Inline code */
:not(pre) > code[class*='language-'] {
  padding: 3px 5px;
  color: var(--color-inline-code);
}

:not(pre) > code {
  padding: 3px 5px;
  border: none;
  font-family: var(--font-code);
  font-weight: 400;
  color: var(--color-inline-code);
  border-radius: var(--border-radius);
  background: var(--color-inline-code-background);
}

code[class*='language-css'],
code[class*='language-scss'],
code[class*='language-less'],
code[class*='language-sass'] {
  color: #cc99cc;
}

/* Syntax Highlighting */
.token.doctype {
  background: #000000;
  color: #fff;
}

.token.comment,
.token.prolog,
.token.cdata {
  color: $code-color-comment;
}

.token.namespace {
  opacity: 0.7;
}

.token.string,
.token.attr-value {
  color: $code-color-string;
}

.token.punctuation {
  color: $code-color-punctuation;
}

.token.operator {
  color: $code-color-operator;
}

.token.variable {
  color: $code-color-variable;
}

.token.property {
  color: $code-color-property;
}

.token.entity,
.token.url,
.token.symbol,
.token.number,
.token.boolean,
.token.constant,
.token.regex,
.token.inserted {
  color: $code-color-number;
}

.token.delimiter {
  background: black;
  color: white;
  padding: 1px 2px;
}

.token.atrule {
  color: $code-color-function;
}

.token.keyword {
  color: $code-color-keyword;
}

.language-autohotkey .token.selector {
  color: $code-color-number;
}

.token.attr-name {
  color: $code-color-attribute;
}

.token.function {
  color: $code-color-function;
}

.language-php .token.function {
  color: white;
}

.token.class-name {
  color: $code-color-class;
}

.token.deleted,
.language-autohotkey .token.tag {
  color: $code-color-error;
}

.token.tag {
  color: $code-color-tag;
}

.language-autohotkey .token.keyword {
  color: $code-color-keyword;
}

.token.selector {
  color: $code-color-attribute;
}

.token.italic {
  font-style: italic;
}

pre[data-line] {
  position: relative;
  padding: 1rem 0;
}

.line-highlight {
  position: absolute;
  left: 0;
  right: 0;
  padding: inherit 0;
  margin-top: 1rem;
  /* Same as .prismâ€™s padding-top */
  background: rgba(150, 150, 150, 0.1);
  pointer-events: none;
  line-height: inherit;
  white-space: pre;
}

.line-highlight:before,
.line-highlight[data-end]:after {
  content: attr(data-start);
  position: absolute;
  top: 0.4em;
  left: 0.6em;
  min-width: 1em;
  padding: 0 0.5em;
  background-color: transparent;
  color: transparent;
  font: bold 65%/1.5 sans-serif;
  text-align: center;
  vertical-align: 0.3em;
  border-radius: 999px;
  text-shadow: none;
}

.line-highlight[data-end]:after {
  content: attr(data-end);
  top: auto;
  bottom: 0.4em;
}

.line-numbers .line-highlight:before,
.line-numbers .line-highlight:after {
  content: none;
}

pre::-moz-selection,
code::-moz-selection {
  text-shadow: none;
  color: inherit;
  background: rgba(150, 150, 150, 0.3) !important;
}

pre::selection,
code::selection {
  text-shadow: none;
  color: inherit;
  background: rgba(150, 150, 150, 0.3) !important;
}

pre[class*='language-']::-moz-selection,
code[class*='language-'] ::-moz-selection {
  text-shadow: none;
  color: inherit;
  background: rgba(150, 150, 150, 0.3) !important;
}

pre[class*='language-']::selection,
code[class*='language-'] ::selection {
  text-shadow: none;
  color: inherit;
  background: rgba(150, 150, 150, 0.3) !important;
}
