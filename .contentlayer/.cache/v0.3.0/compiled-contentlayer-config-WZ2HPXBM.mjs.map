{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer/source-files';\n// Remark & Rehype plugins\nimport remarkGfm from 'remark-gfm';\nimport remarkToc from 'remark-toc';\nimport rehypeExternalLinks from 'rehype-external-links';\nimport rehypeSlug from 'rehype-slug';\n\nexport const Post = defineDocumentType(() => ({\n  name: 'Post',\n  filePathPattern: 'posts/**/*.mdx',\n  contentType: 'mdx',\n  fields: {\n    title: {\n      type: 'string',\n      description: 'The title of the post',\n      required: true,\n    },\n    slug: {\n      type: 'string',\n      required: true,\n    },\n    description: {\n      type: 'string',\n      description: 'Post short description',\n      required: true,\n    },\n    image: {\n      type: 'string',\n      description: 'Post image url',\n      required: false,\n    },\n    updated: {\n      type: 'date',\n      description: 'Date of the latest of edits of the post',\n      required: false,\n    },\n    date: {\n      type: 'date',\n      description: 'The date of the post',\n      required: true,\n    },\n    tags: {\n      type: 'list',\n      of: { type: 'string' },\n      required: false,\n    },\n  },\n  computedFields: {\n    url: {\n      type: 'string',\n      resolve: (post) => `/blog/${post.slug}`,\n    },\n    img: {\n      type: 'string',\n      resolve: (post) => {\n        console.log('post->', post);\n        return '';\n      },\n    },\n  },\n}));\n\nexport const TodayILearned = defineDocumentType(() => ({\n  name: 'TIL',\n  filePathPattern: 'TIL/**/*.mdx',\n  contentType: 'mdx',\n  fields: {\n    title: {\n      type: 'string',\n      description: 'Title of the TIL record',\n      required: true,\n    },\n    description: {\n      type: 'string',\n      description: 'Short description',\n      required: true,\n    },\n    image: {\n      type: 'string',\n      description: 'TIL image url',\n      required: false,\n    },\n    updated: {\n      type: 'date',\n      description: 'Date of the latest update',\n      required: false,\n    },\n    date: {\n      type: 'date',\n      required: true,\n    },\n    tags: {\n      type: 'list',\n      of: { type: 'string' },\n      required: false,\n    },\n    emoji: {\n      type: 'string',\n      required: true,\n    },\n  },\n  computedFields: {\n    url: {\n      type: 'string',\n      resolve: (post) => `/til/${post._raw.flattenedPath}`,\n    },\n    slug: {\n      type: 'string',\n      resolve: (post) => post._raw.flattenedPath,\n    },\n    img: {\n      type: 'string',\n      resolve: (post) => {\n        return '';\n      },\n    },\n  },\n}));\n\nexport default makeSource({\n  contentDirPath: 'content',\n  documentTypes: [Post, TodayILearned],\n  mdx: {\n    remarkPlugins: [remarkGfm, [remarkToc, { maxDepth: 4, tight: true }]],\n    rehypePlugins: [rehypeSlug, rehypeExternalLinks],\n  },\n});\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAE/C,OAAO,eAAe;AACtB,OAAO,eAAe;AACtB,OAAO,yBAAyB;AAChC,OAAO,gBAAgB;AAEhB,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,OAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,SAAS;AAAA,MACP,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,IAAI,EAAE,MAAM,SAAS;AAAA,MACrB,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS,CAAC,SAAS,SAAS,KAAK;AAAA,IACnC;AAAA,IACA,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS,CAAC,SAAS;AACjB,gBAAQ,IAAI,UAAU,IAAI;AAC1B,eAAO;AAAA,MACT;AAAA,IACF;AAAA,EACF;AACF,EAAE;AAEK,IAAM,gBAAgB,mBAAmB,OAAO;AAAA,EACrD,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,OAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,SAAS;AAAA,MACP,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,IAAI,EAAE,MAAM,SAAS;AAAA,MACrB,UAAU;AAAA,IACZ;AAAA,IACA,OAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS,CAAC,SAAS,QAAQ,KAAK,KAAK;AAAA,IACvC;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS,CAAC,SAAS,KAAK,KAAK;AAAA,IAC/B;AAAA,IACA,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS,CAAC,SAAS;AACjB,eAAO;AAAA,MACT;AAAA,IACF;AAAA,EACF;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,MAAM,aAAa;AAAA,EACnC,KAAK;AAAA,IACH,eAAe,CAAC,WAAW,CAAC,WAAW,EAAE,UAAU,GAAG,OAAO,KAAK,CAAC,CAAC;AAAA,IACpE,eAAe,CAAC,YAAY,mBAAmB;AAAA,EACjD;AACF,CAAC;",
  "names": []
}
